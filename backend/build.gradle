buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.cotyledon'
version = '0.1.3'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'io.projectreactor:reactor-test'

	// for 랜덤 스트링 생성
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	// Firebase admin
	implementation 'com.google.firebase:firebase-admin:9.1.0'

	// querydsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

	// Point type
//	implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '5.6.10.Final'
//	implementation group: 'com.graphhopper.external', name: 'jackson-datatype-jts', version: '1.0-2.7'

	// swagger
	implementation "io.springfox:springfox-boot-starter:3.0.0"
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
}

tasks.named('test') {
	useJUnitPlatform()
	systemProperty 'spring.profiles.active', findProperty('profile') ?: 'development'
	systemProperty 'com.cotyledon.appletree.dev-dep.host', findProperty('dev-dep.host') ?: 'song7216.iptime.org'
	systemProperty 'com.cotyledon.appletree.dev-dep.password', findProperty('dev-dep.password') ?: 'ssafy'

}

tasks.named('bootRun') {
	systemProperty 'spring.profiles.active', findProperty('profile') ?: 'development'
	systemProperty 'com.cotyledon.appletree.dev-dep.host', findProperty('dev-dep.host') ?: '!!!_WRONG_HOST_!!!'
	systemProperty 'com.cotyledon.appletree.dev-dep.password', findProperty('dev-dep.password') ?: '!!!_WRONG_PASSWORD_!!!'
}

/* querydsl */
// querydsl 사용할 경로 지정합니다. 현재 지정한 부분은 .gitignore에 포함되므로 git에 올라가지 않습니다.
def querydslDir = "$buildDir/generated/querydsl"

// JPA 사용여부 및 사용 경로 설정
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

// build 시 사용할 sourceSet 추가 설정
sourceSets {
	main.java.srcDir querydslDir
}

// querydsl 컴파일 시 사용할 옵션 설정
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

// querydsl이 compileClassPath를 상속하도록 설정
configurations {
	querydsl.extendsFrom compileClasspath
}
